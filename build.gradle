plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '10.20.0'
}

group = 'com.easybody'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // API documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // Database layer
    implementation 'org.hibernate:hibernate-spatial:6.3.1.Final'
    runtimeOnly 'org.postgresql:postgresql:42.7.4'

    // Schema migrations
    implementation 'org.flywaydb:flyway-core:10.20.0'
    implementation 'org.flywaydb:flyway-database-postgresql:10.20.0'

    // AWS integrations
    implementation 'software.amazon.awssdk:cognitoidentityprovider:2.21.0'
    implementation 'software.amazon.awssdk:s3:2.21.0'
    implementation 'software.amazon.awssdk:sqs:2.21.0'
    implementation 'software.amazon.awssdk:cloudwatch:2.21.0'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.0.3'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-spring:2.15.0'

    // Security / JWT utilities
    implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'

    // Mapping & code generation
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

flyway {
    url = System.getenv('JDBC_DATABASE_URL') ?:
          System.getenv('DB_URL') ?:
          "jdbc:postgresql://${System.getenv('DB_HOST') ?: 'localhost'}:${System.getenv('DB_PORT') ?: '5432'}/${System.getenv('DB_NAME') ?: 'easybody'}"
    user = System.getenv('JDBC_DATABASE_USERNAME') ?: System.getenv('DB_USERNAME') ?: 'postgres'
    password = System.getenv('JDBC_DATABASE_PASSWORD') ?: System.getenv('DB_PASSWORD') ?: 'postgres'
    schemas = ['public']
    locations = ['classpath:db/migration']
    baselineOnMigrate = true
    driver = 'org.postgresql.Driver'
    configurations = ['compileClasspath']
}

tasks.named('test') {
    useJUnitPlatform()
}
