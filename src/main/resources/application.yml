spring:
  application:
    name: easybody
  profiles:
    default: local

aws:
  enabled: ${AWS_ENABLED:false}
  region: ${AWS_REGION:us-east-1}
  cognito:
    user-pool-id: ${COGNITO_USER_POOL_ID:}
    client-id: ${COGNITO_CLIENT_ID:}
    jwks-url: ${COGNITO_JWKS_URL:}
  s3:
    bucket-name: ${S3_BUCKET_NAME:easybody-media}
    presigned-url-expiration: ${S3_PRESIGNED_TTL:3600}
  sqs:
    image-moderation-queue: ${SQS_IMAGE_QUEUE_URL:}
  cloudwatch:
    namespace: EasyBody

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,https://aws-ws-fe.vercel.app}

app:
  search:
    default-radius-km: 10
    max-radius-km: 100
  moderation:
    auto-reject-threshold: 0.8
    manual-review-threshold: 0.5
  pagination:
    default-page-size: 20
    max-page-size: 100

logging:
  level:
    root: INFO
    com.easybody: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: ${SQL_LOG_LEVEL:INFO}

---
# Local-first profile for API validation
spring:
  config:
    activate:
      on-profile: local
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:easybody}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: ${SHOW_SQL:true}
  sql:
    init:
      mode: never

---
# AWS-ready profile stub; supply real RDS/AWS values through env when deploying
spring:
  config:
    activate:
      on-profile: aws
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:your-rds-endpoint.amazonaws.com}:${DB_PORT:5432}/${DB_NAME:easybody}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:changeMe}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  sql:
    init:
      mode: never
