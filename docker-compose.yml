services:
  db:
    image: postgis/postgis:15-3.4-alpine
    container_name: easybody-db
    environment:
      POSTGRES_DB: ${DB_NAME:-easybody}
      POSTGRES_USER: ${DB_USERNAME:-easybody}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-easybody}
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-easybody} -d ${DB_NAME:-easybody}"]
      interval: 10s
      timeout: 5s
      retries: 5

  s3:
    image: minio/minio:latest
    container_name: easybody-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    restart: unless-stopped

  app:
    build: .
    container_name: easybody-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-local}
      AWS_ENABLED: ${AWS_ENABLED:-false}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-http://s3:9000}
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minio}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  pg-data:
  minio-data:
