name: Deploy Staging & Prod

on:
  push:
    branches:
      - staging
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image-ref.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/easybody-api
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Capture primary image tag
        id: image-ref
        run: |
          echo "image=$(echo '${{ steps.meta.outputs.tags }}' | head -n 1)" >> "$GITHUB_OUTPUT"

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Trigger Railway deploy
        uses: railwayapp/action-deploy@v2
        with:
          serviceId: ${{ secrets.RAILWAY_SERVICE_ID }}
          railwayToken: ${{ secrets.RAILWAY_TOKEN }}

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Retag and push image to ECR
        run: |
          SRC="${{ needs.build.outputs.image }}"
          DST="${{ secrets.ECR_REPO }}:prod-${GITHUB_SHA}"
          docker pull "$SRC"
          docker tag "$SRC" "$DST"
          docker push "$DST"

      - name: Deploy to App Runner
        uses: awslabs/amazon-app-runner-deploy@v1
        with:
          service: easybody-api
          image: ${{ secrets.ECR_REPO }}:prod-${GITHUB_SHA}
          access-role-arn: ${{ secrets.APP_RUNNER_ROLE }}
          region: ${{ secrets.AWS_REGION }}
